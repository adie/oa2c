{"name":"Oa2c","tagline":"OAuth2 authorization for embedded iframe applications","body":"# Oa2c - OAuth2 Container\r\n\r\n[![Build Status](https://secure.travis-ci.org/adie/oa2c.png)](http://travis-ci.org/adie/oa2c)\r\n[![Click here to lend your support to: Oa2c - OAuth2 authorization for embedded iframe applications and make a donation at www.pledgie.com !](http://www.pledgie.com/campaigns/19409.png?skin_name=chrome)](http://www.pledgie.com/campaigns/19409)\r\n\r\nRails OAuth2 provider engine to support embedded iframe applications from different sites. Just like games on Facebook.\r\n\r\nHeavily depends on [rack-oauth2](https://github.com/nov/rack-oauth2) gem.\r\n\r\nIt's mostly extract from [rack-oauth2-sample](https://github.com/nov/rack-oauth2-sample).\r\n\r\nRight now it supports only Mongoid 3 as ORM.\r\n\r\n# Installation\r\n\r\nFirst of all, add `gem 'oa2c'` to your Gemfile and bundle it.\r\n\r\nThen add this to `config/application.rb`:\r\n\r\n```ruby\r\n  config.middleware.use Oa2c::Middleware\r\n```\r\n\r\nAnd add this to your `config/routes.rb`:\r\n\r\n```ruby\r\n  mount Oa2c::Engine => \"/oauth\"\r\n```\r\n\r\nAnd then you need to add this line to your user model:\r\n\r\n```ruby\r\n  include Oa2c::User\r\n```\r\n\r\nThis will add `access_tokens` and `authorization_codes` associations.\r\n\r\nAnd finally add to your controllers that require OAuth2 authentictation:\r\n\r\n```ruby\r\n  include Oa2c::Authentication\r\n```\r\n\r\n# Configuration\r\n\r\nTo change some settings, e.g. user model, add an initializer `config/initializers/oa2c.rb`:\r\n\r\n```ruby\r\nOa2c.setup do |config|\r\n  config.user_model = \"User\"\r\n  config.authentication_method = :authenticate_user!\r\n  config.login_method = :sign_in\r\n  config.current_user_method = :current_user\r\n  config.find_user_for_password_authentication = proc {|username, password|\r\n    user = Oa2c.user_model.constantize.where(email: username).first\r\n    user if user.valid_password? password\r\n  }\r\n  config.auto_approve = false # if true, don't show 'approve' / 'deny' buttons to user\r\n  config.layout = false # flase or symbol, just like in controllers\r\nend\r\n```\r\n\r\n**Note**: these are defaults for Devise. You don't need to do anything if you use the same settings\r\n\r\n# License\r\n\r\nSee MIT-LICENSE\r\n\r\n# Contribute\r\n\r\nPull requests are more than welcome!","google":"UA-7950399-10","note":"Don't delete this file! It's used internally to help with page regeneration."}